<?php




########################################################################
########################################################################
# * NOTE: Either put all customizations below the marker near the bottom
# of this file, or comment your changes VERY clearly.
########################################################################
########################################################################




# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
# ini_set( 'memory_limit', '20M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
$wgScriptPath       = "";
$wgScriptExtension  = ".php";

## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL

$wgEnableEmail      = true;
$wgEnableUserEmail  = true;

$wgEmergencyContact = "webmaster@creativecommons.org";
$wgPasswordSender = "webmaster@creativecommons.org";

## For a detailed description of the following switches see
## http://www.mediawiki.org/wiki/Extension:Email_notification 
## and http://www.mediawiki.org/wiki/Extension:Email_notification
## There are many more options for fine tuning available see
## /includes/DefaultSettings.php
## UPO means: this is also a user preference option
$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "TYPE=InnoDB";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

# Postgres specific settings
$wgDBport           = "5432";
$wgDBmwschema       = "mediawiki";
$wgDBts2schema      = "public";

## Shared memory settings
$wgMainCacheType = CACHE_NONE;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = $wgSitename;

$wgLanguageCode = "en";

$wgProxyKey = "c97fb650d6fc5e85631ea9f4ff880d2b5b0a81d6edcaa9166620b649198535d3";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'monobook';

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
# $wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";
# $wgRightsCode = ""; # Not yet used

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$configdate = gmdate( 'YmdHis', @filemtime( __FILE__ ) );
$wgCacheEpoch = max( $wgCacheEpoch, $configdate );



###############################################################################
# PUT ALL CUSTOM CONFIGS AND CHANGES BELOW THIS LINE.  THIS WILL GREATLY EASE #
# THE UPGRADES.  EVERYTHING ABOVE THIS LINE WAS AUTO-GENERATED BY MEDIAWIKI.  #
# IF YOU NEED TO MAKE A CHANGE TO ONE OF THE VARIABLES DEFINED ABOVE, THEN    #
# MOVE IT BELOW THIS LINE IF AT ALL POSSIBLE, OR AT THE VERY LEAST COMMENT    #
# THE CHANGE VERY CLEARLY.                                                    #
###############################################################################

# The page http://wiki.creativecommons.org/Podcasting_Legal_Guide is having a
# problem with the default script memory limit of 16MB.  Let's bump that value
# here:
ini_set("memory_limit", "25M");

$wgSitename         = "CC Wiki";

# database connectivity settings
$wgDBserver         = "localhost";
$wgDBname           = "cc_wiki_staging";
$wgDBuser           = "ccwikistaging";
$wgDBpassword       = "Ccwikistaging.";
$wgDBprefix         = "";
$wgDBtype           = "mysql";

# which skin to use
$wgDefaultSkin = 'cc4';

# cleans up the urls, so they don't include index.php everywhere
$wgArticlePath = "/$1";

# Added this to fix some brokenness related to $wgArticlePath.
# For more information see:
# http://bugzilla.wikimedia.org/show_bug.cgi?id=11428
$wgUsePathInfo = false;

# Users who have created accounts may not edit/upload, unless they have
# confirmed their email address
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['user' ]['move'] = false;
$wgGroupPermissions['user' ]['edit'] = false;
$wgGroupPermissions['user' ]['upload'] = false;
$wgGroupPermissions['user' ]['createpage'] = false;
$wgGroupPermissions['user' ]['createtalk'] = false;
$wgGroupPermissions['emailconfirmed' ]['move'] = true;
$wgGroupPermissions['emailconfirmed' ]['edit'] = true;
$wgGroupPermissions['emailconfirmed' ]['upload'] = true;
$wgGroupPermissions['emailconfirmed' ]['createpage'] = true;
$wgGroupPermissions['emailconfirmed' ]['createtalk'] = true;

# no need to display the IP address
$wgShowIPinHeader = false;

# Uncomment these to prevent enditing of any page by anyone.
# Useful for maintenance.
#$wgGroupPermissions['user']['edit'] = false;
#$wgGroupPermissions['sysop']['edit'] = false;
#$wgGroupPermissions['bureaucrat']['edit'] = false;
	
# the logo to use at the top left corner
$wgLogo = "/skins/common/images/cc.logo.135.png";

# changed wgUploadPath to img_auth.php to enable some security regarding
# files that would normally be served directly by Apache.  for more
# information see: http://www.mediawiki.org/wiki/Manual:Image_Authorisation
$wgUploadPath = "$wgScriptPath/images";
$wgUploadDirectory = "$IP/images";

# Extensions of allowable uploads
$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'ogg', 'pdf', 'svg', 'svgz', 'xcf', 'm4v', 'zip', 'odf', 'odp' );

# Enable uploads
$wgEnableUploads = true;

# display hostname in the mediawiki identifier in the HTML source
$wgShowHostnames = true;

$wgUseImageResize = true;

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by/3.0/";
$wgRightsText = "Creative Commons Attribution 3.0";
$wgRightsIcon = "http://i.creativecommons.org/l/by/3.0/88x31.png";

# http://meta.wikimedia.org/wiki/Proxy_blocking
$wgEnableSorbs = true;

# http://wiki.chongqed.org/CSSHiddenSpam
$wgSpamRegex = "/\<.*style.*?(display|position|overflow|visibility|height)\s*:.*?>/i";

# This should force MW to generate each page every time it is requested.
# Specifically, this is being added because of the Semantic MW <ask> section
# not updating the list of CC Birthday 2007 parties at /Birthday_Party_2007
# until the actual page itself was updated, which is almost never, consequently
# newly added parties don't show up.  This could impact the performance of the
# Wiki, so we need to keep our eyes open for degraded performance here forward.
# Nathan Kinkade 2007-12-05 14:38:07 PST
$wgEnableParserCache = false; // don't cache parser output


#------- http://ontoworld.org/wiki/Help:Installation -------------------
include_once('extensions/SemanticMediaWiki/includes/SMW_Settings.php');
enableSemantics('http://wiki.creativecommons.org');

	#---- ParserFucntions
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );
require_once( "$IP/extensions/Preloader/Preloader.php" );
	#---- SemanticForms
include_once('extensions/SemanticForms/includes/SF_Settings.php');
	#---- Inline Query Parser Function
# require_once('extensions/SMW_InlineQueryParserFunction.php');
	#------ OpenID ----------------
require_once("$IP/extensions/OpenID/OpenID.php");

require_once("$IP/extensions/CC_Semantic_Extensions/CC_Semantic_Extensions.php");
require_once("$IP/extensions/CC_SMW_Extensions/Settings.php");

#------ SpamBlackList ---------
require_once("$IP/extensions/SpamBlacklist/SpamBlacklist.php");

#------ CategoryTree
$wgUseAjax = true;
require_once('extensions/CategoryTree/CategoryTree.php');

#------ RenameUser
require_once( "{$IP}/extensions/Renameuser/SpecialRenameuser.php" );

#------ Simple Forms
require_once( "{$IP}/extensions/SimpleForms/SimpleForms.php" );
$wgSimpleFormsAllowRemoteAddr  = array();

# Add ImageMap support <grin style="evil" /> by Asheesh
require_once('extensions/ImageMap/ImageMap.php');

# Allow remote images.  Allowing this per request from Jon Phillips
# where he says "need this for the case studies to show images
# off of flickr...we have enough editors to avoid abuse on the wiki..."
# (nkinkade 2008-04-22)
$wgAllowExternalImages = true;

# Put a reCaptcha on the registration form
require_once( "$IP/extensions/recaptcha/ReCaptcha.php" );
$recaptcha_public_key = '6LfFQQEAAAAAAPTcluUIkwdwqoj65TxYzbhjuTdS';
$recaptcha_private_key = '6LfFQQEAAAAAAN0h0UMx-4QtbG-BXAB7--gTRtwU';

# Now that we are using APC to speed up PHP, then we might as well
# allow MediaWiki to take advantage of this as well.  Thanks to
# Asheesh for pointing this out. (nkinkade 2008-04-22)
$wgMainCacheType = CACHE_ACCEL;

# Add support for Semantic Layers
# http://s89238293.onlinehome.us/w/index.php?title=Help:Semantic_Layers
#require_once("$IP/extensions/SemanticLayers/includes/SL_Settings.php");
#$slgGoogleMapsKey = 'ABQIAAAAhTiiR2mt-xxEb4aoichygBStAoWTT717mL003kCtCEc19VRPIxQ_B6IyJoKoAHVFfjr8L_Cr1gqZUA';

# SemanticDrilldown http://www.mediawiki.org/wiki/Extension:Semantic_Drilldown
include_once('extensions/SemanticDrilldown/includes/SD_Settings.php');

# Added this extension per request from GSoC person Hugo Dworak (nkinkade 2008-06-11)
require_once("extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");
