<?php




##### ---------------------------------------------------------- #####
#   NOTE: ADD ANY CUSTOM CONFIGURATIONS TO THE BOTTOM OF THIS FILE   #
##### ---------------------------------------------------------- #####





# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

# If PHP's memory limit is very low, some operations may fail.
# ini_set( 'memory_limit', '20M' );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

$wgGroupPermissions['bureaucrat']['userrights'] = true;
$wgGroupPermissions['bureaucrat']['editprotected'] = true;
$wgGroupPermissions['bureaucrat']['editinterface'] = true;
$wgAddGroups['bureaucrat'] = true;
$wgNamespacesWithSubpages[NS_MAIN] = true;

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "localhost";

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
#$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";
$wgDBTableOptions   = "ENGINE=InnoDB";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = false;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = false;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = strtolower( $wgSitename );

$wgLanguageCode = "en";

$wgSecretKey = "fcbc8994e78b3b176c99bf0e78d6828e0c0bdf9504798c82d2812971aa68d581";

#$wgSkipSkins = array("cc4", "cc", "chick", "standard", "cologneblue", "modern", "monobook", "myskin", "nostalgia", "ontoskin", "simple");

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'cc';

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );


##### ---------------------------------------------------------- #####
#                      WIKI CUSTOM CONFIGURATIONS                    #
##### ---------------------------------------------------------- #####


$wgSitename         = "CC Wiki";
$wgEmergencyContact = "webmaster@creativecommons.org";
$wgPasswordSender = "webmaster@creativecommons.org";

# Virtual path. This directory MUST be different from the one used in $wgScriptPath
$wgScriptPath = "";
$wgArticlePath = '/$1';
$wgUsePathInfo = false;

# MySQL parameters
$wgDBname           = "cc_wiki";
$wgDBuser           = "ccwiki";
$wgDBpassword       = "Ccwiki.";

$wgLogo = "/skins/common/images/cc.logo.135.png";

# which skin to use
$wgDefaultSkin = 'cc';

# Don't add the rel="nofollow" to any pages
$wgNoFollowLinks = false;


$wgAllowDisplayTitle = true;

# This allows anonymous editing of any Talk pages (odd numbered namespaces),
# but requires one be in the emailconfirmeed group to edit articles.
# (nkinkade 2009-01-20)
$wgGroupPermissions['user']['editcontent'] = true;
$editPermission = array( 'editcontent' );
for ( $i = 0; $i < 1000; $i += 2) $wgNamespaceProtection[$i] = $editPermission;

# Cause MediaWiki to use the X-Forwarded-For header when
# determining the remote IP address instead of using
# 127.0.0.1, which is where Varnish is connecting from
$wgUseSquid = true;
$wgSquidServers = array('127.0.0.1');

# Bump PHP's memory limit to something more reasonable
ini_set( 'memory_limit', '50M' );

# Show exception in user interface, normally this should be off
#$wgShowExceptionDetails = true;

# This should force MW to generate each page every time it is requested.
# Specifically, this is being added because of the Semantic MW <ask> section
# not updating the list of CC Birthday 2007 parties at /Birthday_Party_2007
# until the actual page itself was updated, which is almost never, consequently
# newly added parties don't show up.  This could impact the performance of the
# Wiki, so we need to keep our eyes open for degraded performance here forward.
# Nathan Kinkade 2007-12-05 14:38:07 PST
$wgEnableParserCache = false; // don't cache parser output

# Put a reCaptcha on the registration form
require_once( "$IP/extensions/recaptcha/ReCaptcha.php" );
$recaptcha_public_key = '6LfFQQEAAAAAAPTcluUIkwdwqoj65TxYzbhjuTdS';
$recaptcha_private_key = '6LfFQQEAAAAAAN0h0UMx-4QtbG-BXAB7--gTRtwU';

# Now that we are using APC to speed up PHP, then we might as well
# allow MediaWiki to take advantage of this as well.  Thanks to
# Asheesh for pointing this out. (nkinkade 2008-04-22)
$wgMainCacheType = CACHE_ACCEL;

# Enable uploads
$wgEnableUploads = true;
$wgUseImageResize = true;

# display hostname in the mediawiki identifier in the HTML source
$wgShowHostnames = true;

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by/3.0/";
$wgRightsText = "Creative Commons Attribution 3.0";
$wgRightsIcon = "http://i.creativecommons.org/l/by/3.0/88x31.png";

# Extensions of allowable uploads
$wgFileExtensions = array( 'png', 'gif', 'jpg', 'jpeg', 'ogg', 'pdf', 'svg', 'svgz', 'xcf', 'm4v', 'zip', 'odf', 'odp', 'psd' );

# The wiki was throwing errors while trying to convert an SVG
# to a PNG and I found this fix somewhere.
$wgMaxShellMemory = 196608;

$wgSVGConverter = 'rsvg';

# Enabled subpages in the main namespace
$wgNamespacesWithSubpages[NS_MAIN] = true;

$wgAllowExternalImages = true;

#
# INCLUDE BELOW THIS LINE ANY EXTENSIONS
#

#------- http://ontoworld.org/wiki/Help:Installation -------------------
include_once('extensions/SemanticMediaWiki/includes/SMW_Settings.php');
enableSemantics('http://wiki-staging.creativecommons.org');
$smwgLinksInValues = true;

#---- ParserFucntions
require_once( "$IP/extensions/ParserFunctions/ParserFunctions.php" );
require_once( "$IP/extensions/Preloader/Preloader.php" );
#---- SemanticForms
include_once('extensions/SemanticForms/includes/SF_Settings.php');
#---- Inline Query Parser Function
# require_once('extensions/SMW_InlineQueryParserFunction.php');
#------ OpenID ----------------
require_once("$IP/extensions/OpenID/OpenID.setup.php");

require_once("$IP/extensions/CC_Semantic_Extensions/CC_Semantic_Extensions.php");
#require_once("$IP/extensions/CC_SMW_Extensions/Settings.php");

#------ SpamBlackList ---------
require_once("$IP/extensions/SpamBlacklist/SpamBlacklist.php");

#------ CategoryTree
$wgUseAjax = true;
require_once('extensions/CategoryTree/CategoryTree.php');

#------ RenameUser
require_once( "{$IP}/extensions/Renameuser/SpecialRenameuser.php" );

#------ Simple Forms
#require_once( "{$IP}/extensions/SimpleForms/SimpleForms.php" );
#$wgSimpleFormsAllowRemoteAddr  = array();

# Add ImageMap support <grin style="evil" /> by Asheesh
require_once('extensions/ImageMap/ImageMap.php');

# SemanticDrilldown http://www.mediawiki.org/wiki/Extension:Semantic_Drilldown
include_once('extensions/SemanticDrilldown/includes/SD_Settings.php');

# Added this extension per request from GSoC person Hugo Dworak (nkinkade 2008-06-11)
require_once("extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.php");

# StringFunctions -- used to fake namespaces in Casestudies (NRY 2008-07-02)
require_once ("$IP/extensions/StringFunctions/StringFunctions.php");

# http://www.mediawiki.org/wiki/Extension:Cite/Cite.php
require_once( $IP.'/extensions/Cite/Cite.php' );

# Semantic Edit Time
require_once( "$IP/extensions/SemanticEditTime/SemanticEditTime.php" );

#FCKEditor
#require_once("$IP/extensions/FCKeditor/FCKeditor.php");
#$wgUseAjax = true;
