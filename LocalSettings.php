<?php





########################################################################
########################################################################
# * NOTE: Either put all customizations below the marker near the bottom
# of this file, or comment your changes VERY clearly.
########################################################################
########################################################################






# This file was automatically generated by the MediaWiki installer.
# If you make manual changes, please keep track in case you need to
# recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# If you customize your file layout, set $IP to the directory that contains
# the other MediaWiki files. It will be used as a base to locate files.
if( defined( 'MW_INSTALL_PATH' ) ) {
	$IP = MW_INSTALL_PATH;
} else {
	$IP = dirname( __FILE__ );
}

$path = array( $IP, "$IP/includes", "$IP/languages" );
set_include_path( implode( PATH_SEPARATOR, $path ) . PATH_SEPARATOR . get_include_path() );

require_once( "$IP/includes/DefaultSettings.php" );

if ( $wgCommandLineMode ) {
	if ( isset( $_SERVER ) && array_key_exists( 'REQUEST_METHOD', $_SERVER ) ) {
		die( "This script must be run from the command line\n" );
	}
}
## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "";
$wgScriptExtension  = ".php";

## UPO means: this is also a user preference option

$wgEnableEmail      = true;
$wgEnableUserEmail  = true; # UPO

$wgEnotifUserTalk = true; # UPO
$wgEnotifWatchlist = true; # UPO
$wgEmailAuthentication = true;

# MySQL specific settings
$wgDBprefix         = "";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 4.1/5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMemCachedServers = array();

$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
# $wgHashedUploadDirectory = false;

## If you have the appropriate support software installed
## you can enable inline LaTeX equations:
$wgUseTeX           = false;

$wgLocalInterwiki   = strtolower( $wgSitename );

$wgLanguageCode = "en";

$wgSecretKey = "f2386331da00572766bc8c5d45c11c984e933acb2f42126092e4465ca840aad0";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook':
$wgDefaultSkin = 'monobook';

$wgDiff3 = "/usr/bin/diff3";

# When you make changes to this configuration file, this will make
# sure that cached pages are cleared.
$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );



###############################################################################
# PUT ALL CUSTOM CONFIGS AND CHANGES BELOW THIS LINE.  THIS WILL GREATLY EASE #
# THE UPGRADES.  EVERYTHING ABOVE THIS LINE WAS AUTO-GENERATED BY MEDIAWIKI.  #
# IF YOU NEED TO MAKE A CHANGE TO ONE OF THE VARIABLES DEFINED ABOVE, THEN    #
# MOVE IT BELOW THIS LINE IF AT ALL POSSIBLE, OR AT THE VERY LEAST COMMENT    #
# THE CHANGE VERY CLEARLY.                                                    #
###############################################################################

$wgSitename         = "CC Monitor";
$wgEmergencyContact = "webmaster@creativecommons.org";
$wgPasswordSender = "webmaster@creativecommons.org";

# Steal the CC logo from teamspace
$wgLogo = "http://monitor.creativecommons.org/images/c/c0/Ccmonitorlogo.135.png";

# If PHP's memory limit is very low, some operations may fail.
ini_set( 'memory_limit', '40M' );

# cleans up the urls, so they don't include index.php everywhere
$wgArticlePath = "/$1";

$wgUsePathInfo = false;

$wgAllowExternalImages = true;

# Let MW use the XFF header for the IP and not the IP (localhost) of Varnish
$wgSquidServers = array('127.0.0.1');

# RIGHTS MANAGEMENT

# Re-create the emailconfirmed group
# Make it so users with confirmed e-mail addresses are in the group.
$wgAutopromote['emailconfirmed'] = APCOND_EMAILCONFIRMED;

# This allows anonymous editing of any Talk pages (odd numbered namespaces),
# but requires one be in the emailconfirmeed group to edit articles.
$wgGroupPermissions['emailconfirmed']['editcontent'] = true;
$editPermission = array( 'editcontent' );
for ( $i = 0; $i < 1000; $i++) $wgNamespaceProtection[$i] = $editPermission;

$wgGroupPermissions['*']['createaccount']    = false;

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgEnableCreativeCommonsRdf = true;
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "http://creativecommons.org/licenses/by/3.0/";
$wgRightsText = "Attribution 3.0 Unported";
$wgRightsIcon = "http://i.creativecommons.org/l/by/3.0/88x31.png";
# $wgRightsCode = "[license_code]"; # Not yet used

## Database settings
$wgDBtype           = "mysql";
$wgDBserver         = "localhost";
$wgDBname           = "monitor";
$wgDBuser           = "monitoradmin";
$wgDBpassword       = "Monitoradmin.";

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads       = true;
$wgStrictFileExtensions = false;

# Allow uploads with these extensions without a warning
$wgFileExtensions[] = 'swf';
$wgFileExtensions[] = 'xml';

# Now that we are using APC to speed up PHP, then we might as well
# allow MediaWiki to take advantage of this as well.
$wgMainCacheType = CACHE_ACCEL;
# The wiki was throwing errors while trying to convert an SVG
# to a PNG and I found this fix somewhere.
$wgMaxShellMemory = 196608;

# The default SVG converter is ImageMagick, but it seems to have
# problems with certain SVG images.  librsvg2  seems to work on
# the ones that ImageMagick failed on.
$wgSVGConverter = 'rsvg';

# Show SQL errors?
$wgShowSQLErrors = false;

#
# Extensions and directly related configs should be included below this section
#
# OpenID
require_once("$IP/extensions/OpenID/OpenID.setup.php");
$wgTrustedRoot = "http://monitor.creativecommons.org/";

# Embed Flash: http://www.mediawiki.org/wiki/Extension:Flash
require_once("$IP/extensions/Flash.php");

# Customizable footer
require_once( "extensions/HeaderFooter/StubManager.php" );
require_once( "extensions/HeaderFooter/HeaderFooter.php" );

# Rich editor
require_once("extensions/FCKeditor/FCKeditor.php");
# Enable rich editor by default
#$wgDefaultUserOptions['riched_start_disabled'] = 0;

# PDF export
# NOTE: 1. require installation of htmldoc.
#       2. $wgTmpDirectory should exist and writable by webserver
require_once("extensions/PdfExport/PdfExport.php");

# Cite
require_once('extensions/Cite/Cite.php');

# recaptcha
require_once( "$IP/extensions/recaptcha/ReCaptcha.php" );
$recaptcha_public_key = '6Le98wYAAAAAALfwwVk1Y_bfh1JaTAef-GoOGmdv';
$recaptcha_private_key = '6Le98wYAAAAAAECgp7-EYlBBtx90HUkG07S9fXML';
